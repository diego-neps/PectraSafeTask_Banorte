@*------------------------------------------------------------------------------
    <auto-generated>
        Este codigo fue generado por Pectra Forms

        Cambios en este archivo pueden ocasionar un comportamiento incorrecto.
    </auto-generated>
    ------------------------------------------------------------------------------*@
<script type="text/javascript">
    $(document).ready(function () {
        $('#confirma-borrar-archivo-adjunto').on('show.bs.modal', function (e) {
            rowToDelete = e.relatedTarget;
            IdToDelete = $(e.relatedTarget).data('to-delete');

            id = $(e.relatedTarget).closest('table').attr('id');
            tblFileUpload = $('#' + id).DataTable();
        });
    });

    function getIdGrupo(tbl_id) {
        return $("#hidIdGrupo_" + tbl_id).val();
    }

    dtSettings = {
        order: [],
        stateSabe: true,
        paging: false,
        ordering: false,
        info: false,
        bFilter: false,
        responsive: {
            details: { type: 'column' }
        },
        dom: 'flirtip',
        columns: [
            { name: 'IdAdjunto', "data": 'IdAdjunto', title: "", sortable: false, searchable: false },
            { name: 'Descripcion', "data": 'description', title: "@Resources.Resource.Descripcion", sortable: false, searchable: false },
            { name: 'FileName', "data": 'filename', title: "@Resources.Resource.NombreArchivo", sortable: false, searchable: false },
            { name: 'Function', "data": null, title: "", sortable: false, searchable: false },
            { name: 'Function2', "data": null, title: "", sortable: false, searchable: false }
        ],
        columnDefs: [
            {
                targets: [0],
                visible: false
            },
            {
                targets: [1], width: '47%',
                render: function (data, type, full, meta) {
                    return '<p style="word-break: normal; white-space:normal">' + data + '</p>';
                }
            },
            {
                targets: [2], width: '47%',
                render: function (data, type, full, meta) {
                    return '<p style="word-break: normal; white-space:normal">' + data + '</p>';
                }
            },
            {
                targets: [3],
                render: function (data, type, full, meta) {
                    var ctrl = '';
                    ctrl += "<button title='@Resources.Resource.titleDownloadFile' class='btn btn-default' type='button' onclick='descargarArchivoAdjunto(" + full.IdAdjunto + ", this)'><i class='glyphicon glyphicon-download'></i></button>";
                    return ctrl;
                }
            },
            {
                targets: [4],
                render: function (data, type, full, meta) {
                    var ctrl = '';
                    ctrl += "<button title='@Resources.Resource.titleRemoveFile' class='btn btn-default' type='button' data-to-delete='" + full.IdAdjunto + "' data-toggle='modal' data-target='#confirma-borrar-archivo-adjunto' ><i class='glyphicon glyphicon-trash'></i></button>";
                    return ctrl;
                }
            }
        ]
    }

    var rowToDelete;
    var IdToDelete;

    function ObtenerTodos(tbl, tbl_id) {
        $.ajax({
            url: '@System.Configuration.ConfigurationManager.AppSettings["APIUrl"]/Attachments/GetByParam?filtro=IdGrupo:' + getIdGrupo(tbl_id),
            contentType: "application/json; charset=utf-8",
            beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer @ViewBag.Token'); },
            type: "GET",
            dataType: 'json',
            success: function (data) {
                AgregarFilasAdjunto(tbl, data)
            },
            error: function (errorData) {
                alert('@Resources.Resource.ErrorDetail');
            }
        });
    }

    function showUploadProgressbar(status, tbl_id)
    {
        var icon = $("#iuploadingprogress_" + tbl_id).show();
        var btn = $("#btnaddfileUpload_" + tbl_id).show();
        var text = $("#btnaddfileUploadText_" + tbl_id).show();
        if (status) {
            icon.show();
            btn.attr("disabled", "disabled");
            text.text("@Resources.Resource.btnAddFileProgress");
        }
        else{
            icon.hide();
            btn.removeAttr("disabled");
            text.text("@Resources.Resource.btnAddFile");
        }
    }

    function SubirArchivo(tbl_id) {

        var description = $("#txtFileUploadDescription_" + tbl_id).val();
        var files = $("#fileToUpload_" + tbl_id).get(0).files;

        if (files.length < 1) {
            alert('@Resources.Resource.msgMustSelectFile');
            return false;
        }
        //$("#iuploadingprogress_" + tbl_id).show();
        showUploadProgressbar(true, tbl_id);

        var oFormData = new FormData();
        oFormData.append("ArchivoASubir", files[0]);
        oFormData.append("Descripcion", description);
        oFormData.append("IdGrupo", getIdGrupo(tbl_id));

        $.ajax({
            url: '@System.Configuration.ConfigurationManager.AppSettings["APIUrl"]/Attachments/Upload',
            beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer @ViewBag.Token'); },
            data: oFormData,
            dataType: 'json',
            type: 'POST',
            contentType: false,
            processData: false,
            success: function (data) {
                //$("#iuploadingprogress_" + tbl_id).hide();
                showUploadProgressbar(false, tbl_id);
                if (data !== "")
                    AgregarFilaAdjunto(tbl_id, data, description, files[0].name.split('\\').pop());
                else
                    alert('@Resources.Resource.ErrorDetail');
                $("#txtFileUploadDescription_" + tbl_id).val("");
                $("#fileToUpload_" + tbl_id).val("");
                $("#txtFileUploadName_" + tbl_id).html("");

            },
            error: function (errorData) {
                showUploadProgressbar(false, tbl_id);
                //$("#iuploadingprogress_" + tbl_id).hide();
                alert('@Resources.Resource.ErrorDetail');
                $("#txtFileUploadDescription_" + tbl_id).val("");
                $("#fileToUpload_" + tbl_id).val("");
                $("#txtFileUploadName_" + tbl_id).html("");
            }
        });
    }

    function elimininarArchivoAdjunto(IdAdjunto, src) {
        $.ajax({
            url: '@System.Configuration.ConfigurationManager.AppSettings["APIUrl"]/Attachments/Delete?idAdjunto=' + IdAdjunto,
            beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer @ViewBag.Token'); },
            type: 'DELETE',
            success: function (data) {
                tblFileUpload.row($(src).parents('tr')).remove().draw();
            },
            error: function (errorData) {
                console.log(errorData);
                alert('@Resources.Resource.ErrorDetail');
            }
        });
    }

    function descargarArchivoAdjunto(IdAdjunto, src) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', '@System.Configuration.ConfigurationManager.AppSettings["APIUrl"]/Attachments/Download?idAdjunto=' + IdAdjunto, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function () {
            if (this.status === 200) {
                var filename = "";
                var disposition = xhr.getResponseHeader('Content-Disposition');
                if (disposition && disposition.indexOf('attachment') !== -1) {
                    var filenameRegex = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/;
                    var matches = filenameRegex.exec(disposition);
                    if (matches != null && matches[1])
                        filename = decodeURIComponent(matches[1].replace(/['"]/g, ''));
                }
                var type = xhr.getResponseHeader('Content-Type');

                var blob = typeof File === 'function'
                    ? new File([this.response], filename, { type: type })
                    : new Blob([this.response], { type: type });
                if (typeof window.navigator.msSaveBlob !== 'undefined') {
                    // IE workaround for "HTML7007: One or more blob URLs were revoked by closing the blob for which they were created. These URLs will no longer resolve as the data backing the URL has been freed."
                    window.navigator.msSaveOrOpenBlob(blob, filename);
                } else {
                    var URL = window.URL || window.webkitURL;
                    var downloadUrl = URL.createObjectURL(blob);

                    if (filename) {
                        // use HTML5 a[download] attribute to specify filename
                        var a = document.createElement("a");
                        // safari doesn't support this yet
                        if (typeof a.download === 'undefined') {
                            window.location = downloadUrl;
                        } else {
                            a.href = downloadUrl;
                            a.download = filename;
                            document.body.appendChild(a);
                            a.click();
                        }
                    } else {
                        window.location = downloadUrl;
                    }

                    setTimeout(function () { URL.revokeObjectURL(downloadUrl); }, 100); // cleanup
                }
            }
        };
        xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
        xhr.setRequestHeader('Authorization', 'Bearer @ViewBag.Token');
        xhr.send(null);
        return;
    }

    function AgregarFilaAdjunto(tbl_id, pIdAdjunto, pdescription, pfileName) {
        tblFileUpload = $("#tableFileUpload_" + tbl_id).DataTable();
        tblFileUpload.rows.add([{ "IdAdjunto": pIdAdjunto, "description": pdescription, "filename": pfileName }]).draw();
    }

    function AgregarFilasAdjunto(tbl, filas) {
        tbl.clear();
        if (filas != '')
            { tbl.rows.add(filas); }
        tbl.draw();
    }

    function elimininarArchivoAdjuntos() {
        elimininarArchivoAdjunto(IdToDelete, rowToDelete)
    }

    function asignarNombreArchivo(tbl_id, src) {
        var nombre = $(src).val().split('\\').pop();
        $("#txtFileUploadName_" + tbl_id).html(nombre);
    }
</script>
<!-- modal -->
<div class="modal fade" id="confirma-borrar-archivo-adjunto" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" aria-hidden="true" onclick="$('#confirma-borrar-archivo-adjunto').modal('hide');">&times;</button>
                <h4 class="modal-title" id="myModalLabel">@Resources.Resource.lblConfirmarEliminacionAdjunto</h4>
            </div>
            <div class="modal-body">
                <p>@Resources.Resource.msgConfirmarEliminacionAdjunto</p>
                <p class="debug-url"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="$('#confirma-borrar-archivo-adjunto').modal('hide');">@Resources.Resource.btnCancelar</button>
                <button type="button" class="btn btn-danger btn-ok" onclick="elimininarArchivoAdjuntos(); $('#confirma-borrar-archivo-adjunto').modal('hide');">@Resources.Resource.lblEliminar</button>
            </div>
        </div>
    </div>
</div>
<!-- modal -->
